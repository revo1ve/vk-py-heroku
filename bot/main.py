import vk_api
import requests
from vk_api.longpoll import VkLongPoll, VkEventType

import pandas as pd
import configparser
import pathlib

current_directory = str(pathlib.Path(__file__).parent.resolve())

vk_session = vk_api.VkApi(token='42853ead70045753424554372fd10d60942801fbcace3a0128e4b6d8d6df56cbf89922db63b3d19af179c')
session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)

help_str = '''rc - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –Ω–∞ –º–µ—Ä–æ
              cu [url] - –∏–∑–º–µ–Ω–∏—Ç—å url —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π'''

def change_url(new_url):
    new_config = configparser.ConfigParser()
    new_config['Forms'] = {'url': new_url.replace('/edit#gid=', '/export?format=csv&gid=')}
    with open(current_directory + '/config.ini', 'w') as cfgfile:
      new_config.write(cfgfile)

def get_url():
    config = configparser.ConfigParser()
    config.read(current_directory + '/config.ini')
    return config['Forms']['url']

def send_msg(id, msg):
    vk_session.method('messages.send', {'user_id': id, 'message': msg, 'random_id': 0})

for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.to_me:
            msg = event.text.lower()
            id = event.user_id
            if msg in ['–ø—Ä–∏–≤–µ—Ç', '–∫—É', '–∑–¥–∞—Ä–æ–≤–∞', '–ø—Ä–∏–≤']:
                send_msg(id, '–ó–¥–∞—Ä–æ–≤–∞ –∫–∞—Ä—Ç–∞ üòé')
            if msg == 'help':
                send_msg(id, help_str)
            if msg == 'rc':
                url = get_url()
                send_msg(id, url)
                if url == '':
                    send_msg(id, '–û—à–∏–±–∫–∞: url –Ω–µ –∑–∞–¥–∞–Ω')
                else:
                    try:
                      df = pd.read_csv(url)
                    except FileNotFoundError:
                      send_msg(id, '–û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')
                    else:
                      rc = len(df)
                      send_msg(id, f'–ù–∞ –º–µ—Ä–æ –∑–∞—Ä–µ–≥–∞–ª–æ—Å—å {rc} —á–µ–ª–æ–≤–µ–∫')
            split_msg = msg.split()
            if split_msg[0] == 'cu':
                if len(split_msg) == 2:
                    change_url(split_msg[1])
                    send_msg(id, f'–ù–æ–≤—ã–π url: {url}')
                else:
                    send_msg(id, '–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã, –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç - cu [url]')
